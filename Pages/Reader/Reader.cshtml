@page
@model EncomendasProject.Pages.Reader.ReaderModel

@using Encomendas.Models
@using System.Net.NetworkInformation

@{
    ViewData["Title"] = "Read QR Codes";
}

<h1>QR Code Scanner</h1>
<div>
    <h2 id="Readerh2">Scan Encomenda QR Code</h2>
    <video id="video" width="300" height="300" style="border: 1px solid black;"></video>
    <button id="startScanButton">Start Scan</button>
    <p id="result">Waiting for scan...</p>
</div>

<div id="details" style="display:none;">
    <h2>Details</h2>
    <p id="detailsText">Encomenda Number and Worker Number will be displayed here after scanning.</p>
</div>

@if (Model.Message != null)
{
    <div id="statusMessage">
        <h2>@Model.Message</h2>
    </div>
}

<form method="post">
    @Html.AntiForgeryToken()
</form>

<script>
    window.addEventListener('load', () => {
        const codeReader = new ZXing.BrowserQRCodeReader();
        let encomendaNumber = '';
        let workerNumber = '';

        // Function to start scanning process
        const startScanning = () => {
            document.getElementById('Readerh2').textContent = 'Scanning Encomenda QR Code...';
            codeReader.decodeFromInputVideoDevice(undefined, 'video')
                .then(result => {
                    encomendaNumber = result.text;
                    document.getElementById('result').textContent = `Encomenda QR Code: ${encomendaNumber} (Now scanning Worker QR Code...)`;
                    codeReader.reset();
                    startWorkerScan(); // Call to scan worker QR code
                })
                .catch(err => {
                    console.error('Scanning error:', err);
                    document.getElementById('result').textContent = `Error scanning Encomenda QR Code: ${err}`;
                });
        };

        // Function to start scanning for Worker QR Code
        const startWorkerScan = () => {
            document.getElementById('Readerh2').textContent = 'Scan Worker QR Code';
            codeReader.decodeFromInputVideoDevice(undefined, 'video')
                .then(result => {
                    workerNumber = result.text;
                    document.getElementById('result').textContent = `Worker QR Code: ${workerNumber}`;
                    sendQRCodeData(encomendaNumber, workerNumber); // Send data to server
                })
                .catch(err => {
                    console.error('Worker scanning error:', err);
                    document.getElementById('result').textContent = `Error scanning Worker QR Code: ${err}`;
                });
        };

        // Function to send QR Code data to the server
        const sendQRCodeData = (encomendaNumber, workerNumber) => {
            // Retrieve the CSRF token
            const csrfTokenElement = document.querySelector('input[name="__RequestVerificationToken"]');
            if (!csrfTokenElement) {
                console.error('CSRF token not found. Ensure @Html.AntiForgeryToken() is present in your form.');
                document.getElementById('result').textContent = 'Error: CSRF token not found. Please contact support.';
                return;
            }

            const csrfToken = csrfTokenElement.value;

            fetch('@Url.Page("Reader")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': csrfToken
                },
                body: new URLSearchParams({
                    'QRCodeData': `${encomendaNumber}_${workerNumber}`
                })
            })
                .then(response => {
                    if (!response.ok) {
                        console.error('HTTP error:', response.status, response.statusText);
                        throw new Error(`Network response was not ok: ${response.statusText}`);
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        document.getElementById('details').style.display = 'block';
                        document.getElementById('detailsText').textContent = `Encomenda Number: ${encomendaNumber}, Worker Number: ${workerNumber}`;
                        document.getElementById('statusMessage').innerHTML = `<h2>${data.message}</h2>`;
                    } else {
                        document.getElementById('statusMessage').innerHTML = `<h2>${data.message}</h2>`;
                    }
                })
                .catch(err => {
                    console.error('Fetch error:', err);
                    document.getElementById('result').textContent = `Error sending data to server: ${err.message}`;
                });
        };

        // Event listener for start scan button
        document.getElementById('startScanButton').addEventListener('click', startScanning);
    });
</script>
